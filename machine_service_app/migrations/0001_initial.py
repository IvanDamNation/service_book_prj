# Generated by Django 4.2 on 2023-04-04 07:49

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dictionary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': '__Справочник__',
                'verbose_name_plural': '__Справочники__',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Сервисная компания',
                'verbose_name_plural': 'Сервисные компании',
            },
        ),
        migrations.CreateModel(
            name='EngineModel',
            fields=[
                ('dictionary_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='machine_service_app.dictionary')),
                ('type_dict', models.CharField(default='Модель двигателя', max_length=32)),
            ],
            options={
                'verbose_name': 'Двигатель',
                'verbose_name_plural': 'Двигатели',
            },
            bases=('machine_service_app.dictionary',),
        ),
        migrations.CreateModel(
            name='FailureType',
            fields=[
                ('dictionary_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='machine_service_app.dictionary')),
                ('type_dict', models.CharField(default='Характер отказа', max_length=32)),
            ],
            options={
                'verbose_name': 'Характер отказа',
                'verbose_name_plural': 'Характеры отказа',
            },
            bases=('machine_service_app.dictionary',),
        ),
        migrations.CreateModel(
            name='FrontAxle',
            fields=[
                ('dictionary_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='machine_service_app.dictionary')),
                ('type_dict', models.CharField(default='Передний управляемый мост', max_length=32)),
            ],
            options={
                'verbose_name': 'Передний управляемый мост',
                'verbose_name_plural': 'Передние управляемые мосты',
            },
            bases=('machine_service_app.dictionary',),
        ),
        migrations.CreateModel(
            name='MachineModel',
            fields=[
                ('dictionary_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='machine_service_app.dictionary')),
                ('type_dict', models.CharField(default='Модель машины', max_length=32)),
            ],
            options={
                'verbose_name': 'Модель машины',
                'verbose_name_plural': 'Модели машин',
            },
            bases=('machine_service_app.dictionary',),
        ),
        migrations.CreateModel(
            name='MaintainType',
            fields=[
                ('dictionary_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='machine_service_app.dictionary')),
                ('type_dict', models.CharField(default='Вид ТО', max_length=32)),
            ],
            options={
                'verbose_name': 'Вид ТО',
                'verbose_name_plural': 'Виды ТО',
            },
            bases=('machine_service_app.dictionary',),
        ),
        migrations.CreateModel(
            name='RearAxleModel',
            fields=[
                ('dictionary_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='machine_service_app.dictionary')),
                ('type_dict', models.CharField(default='Задний ведущий мост', max_length=32)),
            ],
            options={
                'verbose_name': 'Задний ведущий мост',
                'verbose_name_plural': 'Задние ведущие мосты',
            },
            bases=('machine_service_app.dictionary',),
        ),
        migrations.CreateModel(
            name='RecoveryMethods',
            fields=[
                ('dictionary_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='machine_service_app.dictionary')),
                ('type_dict', models.CharField(default='Способ восстановления', max_length=32)),
            ],
            options={
                'verbose_name': 'Способ восстановления',
                'verbose_name_plural': 'Способы восстановления',
            },
            bases=('machine_service_app.dictionary',),
        ),
        migrations.CreateModel(
            name='TransmissionModel',
            fields=[
                ('dictionary_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='machine_service_app.dictionary')),
                ('type_dict', models.CharField(default='Трансмиссия', max_length=32)),
            ],
            options={
                'verbose_name': 'Трансмиссия',
                'verbose_name_plural': 'Трансмиссии',
            },
            bases=('machine_service_app.dictionary',),
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factory_number', models.CharField(max_length=32, unique=True)),
                ('engine_num', models.CharField(max_length=16, unique=True)),
                ('transmission_num', models.CharField(max_length=16, unique=True)),
                ('rear_axle_num', models.CharField(max_length=16, unique=True)),
                ('front_axle_num', models.CharField(max_length=16)),
                ('supply_contract', models.CharField(max_length=32)),
                ('shipment_date', models.DateField(default=datetime.date.today)),
                ('consignee', models.CharField(max_length=64)),
                ('shipment_address', models.CharField(max_length=128)),
                ('equipment', models.CharField(max_length=128)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts_app.customer')),
                ('service_comp', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='machine_service_app.servicecompany')),
                ('engine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='machine_service_app.enginemodel')),
                ('front_axle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='machine_service_app.frontaxle')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='machine_service_app.machinemodel')),
                ('rear_axle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='machine_service_app.rearaxlemodel')),
                ('transmission', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='machine_service_app.transmissionmodel')),
            ],
            options={
                'verbose_name': 'Машина',
                'verbose_name_plural': 'Машины',
                'ordering': ['model', 'factory_number'],
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
                ('operating_hours', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100000, django.core.validators.MinValueValidator(0))])),
                ('work_order', models.CharField(max_length=32)),
                ('work_order_date', models.DateField(default=models.DateField(default=datetime.date.today))),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='machine_service_app.machine')),
                ('maintain_corp', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='machine_service_app.servicecompany')),
                ('service_comp', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts_app.servicemanager')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='machine_service_app.maintaintype')),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_complaint', models.DateField(default=datetime.date.today)),
                ('operating_hours', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100000, django.core.validators.MinValueValidator(0))])),
                ('failure_description', models.CharField(max_length=255)),
                ('used_parts', models.CharField(max_length=255)),
                ('date_of_repair', models.DateField(default=datetime.date.today)),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='machine_service_app.machine')),
                ('service_comp', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts_app.servicemanager')),
                ('recovery_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='machine_service_app.recoverymethods')),
                ('unit_failure', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='machine_service_app.failuretype')),
            ],
        ),
    ]
